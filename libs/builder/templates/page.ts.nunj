// @ts-nocheck
import {ChangeDetectionStrategy, Component} from '@angular/core';
import {Routes} from '@angular/router';
import {NgDocDemoAssets, NgDocPageComponent, NgDocRootPage} from '@ng-doc/app';
import {isRoute, NgDocPage, NgDocPageType} from '@ng-doc/core';
{%- if importEntry %}
import metadata from '{{ entryImportPath }}';
{%- endif %}
{%- if playgrounds %}
import {PLAYGROUND_COMPONENTS, PLAYGROUND_PROVIDERS} from './playgrounds';
{%- endif %}
{%- if demoAssets %}
import demoAssets from './demo-assets';
{%- endif %}

const pageContent: string = `{{ content | toTemplateString }}`

@Component({
  selector: 'ng-doc-page-{{ id }}',
  standalone: true,
  template: `<ng-doc-page></ng-doc-page>`,
  changeDetection: ChangeDetectionStrategy.OnPush,
  imports: [
    NgDocPageComponent,
      {%- if importEntry and page.hasImports %}
    ...entry.imports,
      {%- endif %}
      {%- if playgrounds %}
    ...PLAYGROUND_COMPONENTS,
      {%- endif %}
  ],
  providers: [
    {provide: NgDocRootPage, useExisting: DynamicComponent},
      {%- if playgrounds %}
    PLAYGROUND_PROVIDERS,
      {%- endif %}
      {%- if importEntry %}
    (entry.providers ?? []),
      {%- endif %}
  ],
})
export class DynamicComponent extends NgDocRootPage {
  readonly routePrefix: string = '{{ routePrefix }}';
  readonly pageType: NgDocPageType = '{{ pageType }}';
  readonly pageContent: string = pageContent;
    {%- if editSourceFileUrl %}
  readonly editSourceFileUrl: string = '{{ editSourceFileUrl }}';
    {%- endif %}
    {%- if viewSourceFileUrl %}
  readonly viewSourceFileUrl: string = '{{ viewSourceFileUrl }}';
    {%- endif -%}
    {%- if importEntry %}
  readonly page?: NgDocPage = entry;
    {%- endif %}
    {%- if demoAssets %}
  readonly demoAssets: NgDocDemoAssets = demoAssets;
    {%- endif %}

  constructor() {
    super();
  }
}

const routes: Routes = [{
    {%- if importEntry %}
  ...(isRoute(entry.route) ? entry.route : {}),
    {%- endif %}
  path: '',
  component: DynamicComponent,
  title: `{{ page.title | toTemplateString }}`,
}]

export default routes;

