// @ts-nocheck
import {ChangeDetectionStrategy, Component, Type} from "@angular/core";
import {Routes} from "@angular/router";
import {NgDocDemoAssets, NgDocPageComponent, NgDocRootPage} from '@ng-doc/app';
import {NgDocPageType} from '@ng-doc/core';

const pageContent: string = `{{ pageContent | toTemplateString }}`

@Component({
	selector: 'ng-doc-page-{{ page.fullRoute | kebabCase }}',
	standalone: true,
	template: `<ng-doc-page></ng-doc-page>`,
	changeDetection: ChangeDetectionStrategy.OnPush,
	imports: [NgDocPageComponent],
	providers: [{provide: NgDocRootPage, useExisting: DynamicComponent}],
})
export class DynamicComponent extends NgDocRootPage {
	readonly routePrefix?: string = undefined;
	readonly pageType: NgDocPageType = 'api';
	{%- if page.editSourceFileUrl %}
	readonly editSourceFileUrl: string = '{{ page.editSourceFileUrl }}';
	{%- endif %}
	{%- if page.viewSourceFileUrl %}
	readonly viewSourceFileUrl: string = '{{ page.viewSourceFileUrl }}';
	{%- endif %}
	readonly pageContent: string = pageContent;
	readonly demo: Record<string, Type<unknown>> | undefined = undefined;
	readonly demoAssets: NgDocDemoAssets | undefined = undefined;

	constructor() {
		super();
	}
}

const routes: Routes = [{
	path: '',
	component: DynamicComponent,
	title: `{{ page.title | toTemplateString }}`,
}];

export default routes;
