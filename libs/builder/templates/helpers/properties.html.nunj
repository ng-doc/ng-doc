{% import "helpers/type.html.nunj" as typeMacro %}
{% import "helpers/declaration-modifiers.html.nunj" as tagsMacro %}
{% import "helpers/decorators.html.nunj" as decoratorsMacro %}

{% macro render(properties, origin) %}
    <div class="ng-doc-table-wrapper">
        <table class="ng-doc-properties-table">
            <thead>
            <tr indexable="false">
                <th class="ng-doc-properties-table-name">Name</th>
                <th class="ng-doc-properties-table-type">Type</th>
                <th class="ng-doc-properties-table-description">Description</th>
            </tr>
            </thead>
            <tbody>
            {%- for property in properties %}
                {% set propertyChain = property | getPropertyChain %}
                {% set inheritedFrom = property | getInheritedParent(origin) %}
                {% set overriddenMember = property | getOverriddenMember %}
                {% set implementedMember = property | getImplementedMember %}
                {% set docNode = propertyChain | firstNodeWithComment %}

                <tr dataSlug="{{ property.getName() }}" dataSlugType="member">
                    <td indexable="false">
                        {{ decoratorsMacro.render(property.getDecorators(), true) if property.getDecorators }}
                        {{ tagsMacro.render(property, "badge") }}{{ property.getName() }}
                        <div class="ng-doc-node-details">
                            {%- if inheritedFrom %}
                                inherited from <code>{{ inheritedFrom.getName() }}</code>
                            {%- elseif overriddenMember %}
                                overrides <code>{{ (overriddenMember | getMemberParent).getName() }}</code>
                            {%- elseif implementedMember %}
                                implements <code>{{ (implementedMember | getMemberParent).getName() }}</code>
                            {%- endif %}
                        </div>
                    </td>
                    <td>{{ typeMacro.type(property) }}</td>
                    <td>{{ docNode | extractDocs }}</td>
                </tr>
            {%- endfor %}
            </tbody>
        </table>
    </div>
{% endmacro %}
